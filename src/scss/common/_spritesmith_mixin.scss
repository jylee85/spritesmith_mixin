@charset "utf-8";

@import "spritesmith_function";

// 중복되는 아이콘명이 있을때 충돌나지 않게 spritesheet와 sprite를 연결해주고,
// 사용된 선택자만 속성을 추가해주는 mixin
@mixin sprite-init($spritesheet, $retina:true){
	$sp-spritesheet-name: get-spritesheet-name($spritesheet);
	%#{$sp-spritesheet-name}{
		@include get-spritesheet-url($spritesheet, $retina, $repeat-option:no-repeat);
		@if $retina {
			@include get-spritesheet-size($spritesheet, $retina);
		}
	}
}

// sprite 자동화를 위한 기본적인 mixin
@mixin get-sprite($sprite, $spritesheet, $retina:true, $display:inline-block) {
	// extend는 mediaquery 내부에서 사용되면 컴파일 오류를 발생시키기 때문에 미디어 쿼리 내부에서는 get-sprite가 아닌
	// mediaquery바깥에서 선언하거나 개별 함수를 사용하여 값을 적용해야 함
	$sp-spritesheet-name: get-spritesheet-name($spritesheet);

	@extend %#{$sp-spritesheet-name};

	@if $display != null{
		display: $display;
	}
	width: get-sprite-width($sprite, $spritesheet, $retina);
	height: get-sprite-height($sprite, $spritesheet, $retina);
	background-position: get-sprite-position($sprite, $spritesheet, $retina);
}

@mixin get-spritesheet-url($spritesheet, $retina:true, $repeat-option:false) {
	$sp-spritesheet-url: get-spritesheet-url($spritesheet);
	$sp-spritesheet-url-pc: str-replace(get-spritesheet-url($spritesheet),'.png','_pc.png');
	background-image: url($sp-spritesheet-url);
	@if $retina == true{
		background-image: url($sp-spritesheet-url-pc) \9;
	}
	@if ($repeat-option){
		background-repeat: $repeat-option;
	}
}

@mixin get-spritesheet-size($spritesheet, $retina:true) {
	$sp-spritesheet-width: get-spritesheet-width($spritesheet);
	$sp-spritesheet-height: get-spritesheet-height($spritesheet);

	@if $retina == true {
		-webkit-background-size: ($sp-spritesheet-width / 2) ($sp-spritesheet-height / 2);
		background-size: ($sp-spritesheet-width / 2) ($sp-spritesheet-height / 2);
	}@else{
		-webkit-background-size: ($sp-spritesheet-width) ($sp-spritesheet-height);
		background-size: ($sp-spritesheet-width) ($sp-spritesheet-height);
	}
}
